#!/bin/bash
function implicit_time_setting()
{
    echo "Add"
}

function time_validation()
{
    echo "DETECTED TIME: $1"
    # check format
    timearray=($1)
    if [[ ${#timearray[@]} -eq 3 ]] && \
        [[ ${timearray[0]} =~ [0-9]{4}-(0[1-9]|1[0-2])-([0-2][0-9]|3[01]) ]] && \
        [[ ${timearray[1]} =~ ([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9] ]] && \
        [[ ${timearray[2]} =~ [+-](0[0-9]|1[01])(00|15|30|45) ]]; then

        # user agreement
        echo "Is the specified time correct?"
        read input
        if [[ $input == [yY]* ]]; then
            return 0
        fi
    fi
    return 1
}

args=()
while (( "$#" > 0 ))
do
    case "$1" in 
        -d | --date)
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "cheat-commit date option [$1] requires date string." 1>&2
                exit 1
            else
                datearray=($2)
                if [[ ${#datearray[@]} -eq 1 ]]; then
                    datearray=("${datearray[@]}" $(date +%H:%M:%S))
                fi
                if [[ ${#datearray[@]} -eq 2 ]]; then
                    datearray=("${datearray[@]}" "+0900")
                fi
                COMMIT_TIME="${datearray[@]}"
            fi
            shift 2
            ;;
        *)
            args=("${args[@]}" "$1")
            shift 1
            ;;
    esac
done

time_validation "$COMMIT_TIME"
if [[ $? -eq 0 ]]; then
    GIT_COMMITTER_DATE="$COMMIT_TIME" GIT_AUTHOR_DATE="$COMMIT_TIME" git commit "${args[@]}"
fi

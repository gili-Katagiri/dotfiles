if &compatible
    set nocompatible
endif

" dein.vim settings ----------------------
" dein directories
let s:xdg_dir = empty($XDG_CONFIG_HOME)
    \ ? expand('~/.cache')
    \ : expand($XDG_CONFIG_HOME)
let s:dein_dir = s:xdg_dir . '/dein'
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'

if &runtimepath !~# '/dein.vim'
    " install dein from git if not yet
    if !isdirectory(s:dein_repo_dir)
        execute '!git clone https://github.com/Shougo/dein.vim' s:dein_repo_dir
    endif
    execute 'set runtimepath^=' . s:dein_repo_dir
    " you can't jump to dein-help without this
    execute 'helptags' s:dein_repo_dir . '/doc'
endif

" begin dein load plugins
if dein#load_state(s:dein_dir)
    call dein#begin(s:dein_dir)
    " managed by toml
    let s:rc_dir = expand('~/.vim')
    let s:toml = s:rc_dir . '/dein.toml'
    " read toml and cache
    call dein#load_toml(s:toml, {'lazy': 0})
    " Add plugins installed without dein.vim
    let s:extoml = expand('~/.local/etc/vim/exdein.toml')
    if filereadable(s:extoml)
        call dein#load_toml(s:extoml, {'lazy': 0})
    endif
    " end settings
    call dein#end()
    call dein#save_state()
endif

" plugin installation check
if dein#check_install()
    call dein#install()
endif
" plugin removable check
let s:removed_plugins = dein#check_clean()
if len(s:removed_plugins) > 0
    call map(s:removed_plugins, "delete(v:val, 'rf')")
    call dein#recache_runtimepath()
endif
" end dein.vim settings ------------------


" set japanese help
set helplang=ja

set fileencodings=utf-8,cp932
set clipboard+=unnamed

syntax enable

" current window highlight
" based on 'hybrid' colorscheme
autocmd ColorScheme * highlight NormalNC ctermfg=250 ctermbg=236 guifg=#c5c8c6 guibg=#1d1f21
autocmd WinEnter,BufWinEnter * setlocal wincolor=Normal
autocmd WinLeave * setlocal wincolor=NormalNC

" file save options
" backup
set writebackup
set nobackup
" swapfile
set noswapfile
" no-swapfile but use coc.nvim for update: recommended 300
set updatetime=300

" auto reload file if detected changing outside of Vim
set autoread
" enable to open another file even if buff-file is not saved
set hidden

" display row number and current cursor line
set number
set cursorline
" sign-column with number-column
set signcolumn=number
" no-cursorcolumn
set nocursorcolumn
" notify whether )}] matched
set showmatch
" but not show long time
let loaded_matchparen = 1

" other options
set smartindent
" write '#' at current cursor
inoremap # X<C-h>#
set novisualbell
" enable to move empty-character point
set virtualedit=onemore

" status line
set showcmd
set cmdheight=2
set laststatus=2
set wildmenu
set wildmode=list:longest

" print tab as >--
set tabstop=8
set softtabstop=4
set shiftwidth=4
set noexpandtab
set list listchars=tab:>-,trail:-

" search options
set ignorecase
set smartcase
set incsearch
set wrapscan
set hlsearch
nmap <silent> <Esc><Esc> :nohlsearch<CR><Esc>

" Insert-mode line move
inoremap <C-H> <Home>
inoremap <C-L> <End>
